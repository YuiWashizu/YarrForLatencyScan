/*
  LatencyAnalysis
*/
#undef fromHitTree_cxx

#include "fromHitTree.h"
#include "TFile.h"
#include "TTree.h"
#include "TH1.h"
#include "TH2.h"
#include "TCanvas.h"
#include "TGraph.h"
#include <stdio.h>
#include <string>
#include <sstream>
#include <fstream>
#include <iostream>

void bcidVSnhits(std::string fname, int min) {
  
  TFile* f = TFile::Open(fname.c_str(), "READ");
  TTree* t = dynamic_cast<TTree*>(f->Get("HitTree"));
  fromHitTree event(t);
  int nevents = t->GetEntries();
  int nhits[nevents];
  int bcid[nevents];

  for (int ievent=0; ievent<nevent; ievent++) {
    event.GetEntry(ievent);
    if (event.hit_l1id%16 == 7) {
      for (int ihit=0; ihit<event.nhits; ihit++) {
	nhits[ievent] = event.nhits;
	bcid[nhits] = event.bcid;
      }
    }
  }
  
  TGraph *g = new TGraph(nevents, bcid, nhits);
  g->Draw("AP");
}

